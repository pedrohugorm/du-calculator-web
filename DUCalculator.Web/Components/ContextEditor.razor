@using DUCalculator.Web.Domain
@using DUCalculator.Web.Domain.WeaponDamage
@using DUCalculator.Web.Domain.WeaponDamage.Prefabs

@code
{
    private readonly WeaponDamageContext _context = AppState.WeaponDamage.Context;
    private readonly Dictionary<string, IContextPrefab> _prefabs = AppState.Prefabs;
    private IContextPrefab? _selectedPrefab;

    protected override void OnInitialized()
    {
        base.OnInitialized();

        AppState.OnUpdate += Update;
    }

    private void Update()
    {
        StateHasChanged();
    }


    private void ChangePrefab(ChangeEventArgs obj)
    {
        if (obj.Value == null)
        {
            return;
        }

        _prefabs.TryGetValue(obj.Value!.ToString()!, out _selectedPrefab);
    }

    private void LoadPrefab()
    {
        _selectedPrefab?.Load(_context);

        if (_selectedPrefab != null)
        {
            _context.Console.WriteLine($"{_selectedPrefab.Name} Loaded");
            AppState.NotifyUpdated();
        }
    }
}

<div class="container">
    <form class="context-editor">
        <div class="row">
            <div class="form-group col space-bottom">
                <label class="dark-bg">Simulation Delta Time:</label>
                <input type="number" @bind="@_context.DeltaTime" class="form-control"/>
            </div>
        </div>
        <div class="form-group space-bottom">
            <label class="dark-bg">Target Resistances: </label>
            <div class="dark-bg">
                <div class="row">
                    <div class="col">AM: <input type="number" @bind="@_context.DamageReceiver.AntimatterResistance" class="form-control"/></div>
                    <div class="col">EM: <input type="number" @bind="@_context.DamageReceiver.ElectromagneticResistance" class="form-control"/></div>
                </div>
                <div class="row">
                    <div class="col">KN: <input type="number" @bind="@_context.DamageReceiver.KineticResistance" class="form-control"/></div>
                    <div class="col">TH: <input type="number" @bind="@_context.DamageReceiver.ThermicResistance" class="form-control"/></div>
                </div>
            </div>
        </div>

        @if (_context.WeaponId != null)
        {
            <div class="form-group space-bottom">
                <label class="dark-bg">Loaded Weapon: @_context.WeaponId</label>
                <div class="dark-bg">
                    <div class="form-group">
                        <label class="dark-bg">Base Damage:</label>
                        <input type="number" @bind="@_context.BaseDamage" class="form-control"/>
                    </div>
                    <div class="form-group">
                        <label class="dark-bg">Cycle Time:</label>
                        <input type="number" @bind="@_context.RateOfFire" class="form-control"/>
                    </div>
                    <div class="form-group">
                        <label class="dark-bg">Reload Time:</label>
                        <input type="number" @bind="@_context.ReloadTime" class="form-control"/>
                    </div>
                    <div class="form-group">
                        <label class="dark-bg">Damage Types:</label>
                        <label class="dark-bg">@string.Join(", ", _context.DamageTypes)</label>
                    </div>
                </div>
            </div>
        }

        <div class="form-group space-bottom">
            <label class="dark-bg">Prefabs:</label>

            <div class="row">
                <div class="col">
                    <select class="form-control" @onchange="ChangePrefab">
                        <option value="">Select a Prefab</option>
                        <optgroup label="Weapons">
                            @foreach (var item in _prefabs)
                            {
                                <option value="@item.Key">@item.Key</option>
                            }
                        </optgroup>
                    </select>
                </div>
                <div class="col">
                    <button type="button" class="btn btn-secondary" @onclick="LoadPrefab">Load</button>
                </div>
            </div>
        </div>

        <div class="form-group space-bottom">
            <label class="dark-bg">Ship State:</label>

            <ul>
                @foreach (var g in _context.ShipState.Weapons.GroupBy(w => w.GetGroupId()))
                {
                    <li>@g.Key: @g.Count()</li>
                }
            </ul>
            
            <label>Ammo Limits:</label>
            <ul>
                @foreach (var at in AmmoType.AllAmmoTypes)
                {
                    var container = _context.ShipState.AmmoContainer;
                    if (container.TryGetValue(at, out var value))
                    {
                        <li><AmmoTypeLabel AmmoType="at" />: @value</li>
                    }
                    else if(_context.WeaponsAdded.Contains(at.WeaponId))
                    {
                        <li><AmmoTypeLabel AmmoType="at" />: Unlimited</li>
                    }
                }
            </ul>
        </div>
    </form>
</div>