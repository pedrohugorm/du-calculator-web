@page "/hex"
@using DUCalculator.Web.Domain.HexGrid
@using System.Text
@using System.Numerics

@inject IJSRuntime JS

<PageTitle>Live Trace</PageTitle>

@inject IHexGridGenerator HexGridGenerator;

@code {
    private string _startPosition = "::pos{0,0,1058320,1238750,-3489237}";
    private string _endPosition = "::pos{0,0,1058320,1238750,-89237}";
    private int _numRings = 3;
    private float _hexSize = 3.464f;
    private string _wpAColor = "FF10F0";
    private string _wpBColor = "10FFF0";
    private string _output = "";
    private readonly bool _showExportList = true;
    private bool _reverseOrder = false;

    private IEnumerable<IHexGridGenerator.WaypointLine> _waypointLines = new List<IHexGridGenerator.WaypointLine>();
    private Dictionary<string, bool> _copiedWaypoints = new();

    private void Calculate()
    {
        var result = HexGridGenerator.GenerateGrid(
            new IHexGridGenerator.Settings(
                _startPosition,
                _endPosition,
                _reverseOrder,
                _numRings,
                _hexSize
                )
            );

        var sb = new StringBuilder();

        _waypointLines = result.WaypointLines;

        sb.AppendLine();

        // sb.AppendLine($"Number of Lines = {result.NumberOfLines}");
        // sb.AppendLine($"Single Line Distance = {result.SingleLineDistance:N2}");
        // sb.AppendLine($"Total Distance = {result.TotalDistance:N2}");
        // sb.AppendLine($"Scanning = {result.Scanning:N2}");
        // sb.AppendLine($"Reposition = {result.Reposition:N2}");

        _output = sb.ToString();
    }


    private void Copy(MouseEventArgs _, IHexGridGenerator.Waypoint waypoint)
    {
        JS.InvokeVoidAsync("copyToClipboard", waypoint.Position);

        if (!_copiedWaypoints.TryAdd(waypoint.Name, true))
        {
            _copiedWaypoints.Remove(waypoint.Name);
        }
    }

    private void CopySaga()
    {
        var sb = new StringBuilder();
        sb.AppendLine($"local sagaDbValue = '{_waypointLines.ToSagaDataBankString()}'");
        sb.AppendLine("db.setStringValue('SagaRoutes', sagaDbValue)");
        
        JS.InvokeVoidAsync("copyToClipboard", sb.ToString());
        
        _copiedWaypoints.TryAdd("saga", true);
    }
    
    private void CopyFox()
    {
        var sb = new StringBuilder();
        sb.AppendLine($"local foxDbValue = '{_waypointLines.ToFoxDataBankString(_wpAColor, _wpBColor)}'");
        sb.AppendLine("db.setStringValue('savemarks', foxDbValue)");
        
        JS.InvokeVoidAsync("copyToClipboard", sb.ToString());
        
        _copiedWaypoints.TryAdd("fox", true);
    }

}

<div class="console-container">
    <div class="console-output">
        @if (_waypointLines.Any())
        {
            <div class="row">
                <a @onclick="() => CopySaga()" class="copy-script" title="click to copy the script for Saga">
                    <pre class="lua">local sagaDbValue = '@_waypointLines.ToSagaDataBankString()'
db.setStringValue('SagaRoutes', sagaDbValue);</pre>
                </a>
                @if (_copiedWaypoints.ContainsKey("saga"))
                {
                    <span class="copied-check">&#10003; Copied script</span>
                }
                <a @onclick="() => CopyFox()" class="copy-script" title="click to copy the script for Fox HUD">
                    <pre class="lua">local foxDbValue = '@_waypointLines.ToFoxDataBankString(_wpAColor, _wpBColor)'
db.setStringValue('savemarks', foxDbValue);</pre>
                </a>
                @if (_copiedWaypoints.ContainsKey("fox"))
                {
                    <span class="copied-check">&#10003; Copied script</span>
                }
            </div>
        }
        <div class="row">
            <div class="col">
                @foreach (var wpl in _waypointLines)
                {
                    <div class="waypoint-line">
                        <span class="waypoint-name">@wpl.StartWaypoint.Name</span> =
                        <a @onclick="args => Copy(args, wpl.StartWaypoint)" href="javascript:void(0)" title="click to copy @wpl.StartWaypoint.Name" class="waypoint-position">@wpl.StartWaypoint.Position</a>
                        @if (_copiedWaypoints.ContainsKey(wpl.StartWaypoint.Name))
                        {
                            <span class="copied-check">&#10003;</span>
                        }
                        <span> &#8594; </span>
                        <span class="waypoint-name">@wpl.EndWaypoint.Name</span> =
                        <a @onclick="args => Copy(args, wpl.EndWaypoint)" href="javascript:void(0)" title="click to copy @wpl.EndWaypoint.Name" class="waypoint-position">@wpl.EndWaypoint.Position</a>
                        @if (_copiedWaypoints.ContainsKey(wpl.EndWaypoint.Name))
                        {
                            <span class="copied-check">&#10003;</span>
                        }
                    </div>
                }
            </div>
        </div>
        <div class="row">
            <div class="col">
                <pre>@_output</pre>
            </div>
        </div>
        @if (_showExportList)
        {
            <div class="row">
                <pre>
                @foreach (var wp in _waypointLines.ToWaypointList().Select(x => $"{x.Name} = {x.Position}\n"))
                {
                    @wp
                }
                </pre>
            </div>
        }
    </div>
    <div class="console-input">
        <form @onsubmit="Calculate">
            <div class="container">
                <div class="row">
                    <div class="col">
                        <div class="form-group col space-bottom">
                            <div class="form-group col space-bottom">
                                <label class="dark-bg">Start Position:</label>
                                <input type="text" placeholder="Start Position" @bind="_startPosition" class="form-control"/>
                            </div>
                        </div>
                    </div>
                    <div class="col">
                        <div class="form-group col space-bottom">
                            <div class="form-group col space-bottom">
                                <label class="dark-bg">End Position:</label>
                                <input type="text" placeholder="End Position" @bind="_endPosition" class="form-control"/>
                            </div>
                        </div>
                    </div>
                    <div class="col-2">
                        <div class="form-group col space-bottom">
                            <label class="dark-bg">Number of Rings:</label>
                            <input type="number" @bind="_numRings" class="form-control"/>
                        </div>
                    </div>
                    <div class="col-2">
                        <div class="form-group col space-bottom">
                            <label class="dark-bg">Hex Size:</label>
                            <input type="text" @bind="_hexSize" class="form-control"/>
                        </div>
                    </div>

                </div>
                <div class="row">
                    <div class="col">
                        <button type="submit" @onclick="Calculate" class="btn btn-primary">Calculate</button>
                    </div>
                    <div class="col-2">
                        <div class="form-group col space-bottom">
                            <label class="dark-bg">Waypoint A Color:</label>
                            <input type="text" @bind="_wpAColor" class="form-control" style="border-color: #@_wpAColor; border-width: 2px"/>
                        </div>
                    </div>
                    <div class="col-2">
                        <div class="form-group col space-bottom">
                            <label class="dark-bg">Waypoint B Color:</label>
                            <input type="text" @bind="_wpBColor" class="form-control" style="border-color: #@_wpBColor; border-width: 2px"/>
                        </div>
                    </div>
                    <div class="col-2">
                        <div class="form-group col space-bottom">
                            <label class="dark-bg">Ascending Order:</label>
                            <input type="checkbox" @bind="_reverseOrder" class="form-check"/>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>